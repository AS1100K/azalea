searchState.loadedDescShard("azalea_core", 0, "Azalea Core\nRepresentations of positions of various things in …\nThe data sent to the client in the …\nA resource, like minecraft:stone\nA rectangular prism with a starting and ending point.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRepresents Java’s BitSet, a list of bits.\nA list of bits with a known fixed size.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the index of the first bit that is set to <code>false</code> …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOnly works for up to 8 blocks\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPick x, y, or z from the arguments depending on the axis.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA Minecraft gamemode, like survival or creative.\nRust doesn’t let us …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the player can’t interact with blocks while in …\nGet the id of the game type, but return -1 if the game …\nA cosine function that uses a lookup table.\nA sine function that uses a lookup table.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe coordinates of a block in the world. For entities (if …\nThe coordinates of a block inside a chunk.\nChunk coordinates are used to represent where a chunk is …\nThe coordinates of a block inside a chunk section. Each …\nThe coordinates of a chunk section in the world.\nA block pos with an attached world\nUsed to represent an exact position in the world where an …\nGet the absolute center of a block position by adding 0.5 …\nGet the distance from this position to another position. …\nGet the squared distance from this position to another …\nGet the squared distance from this position to another …\nGet the squared distance from this position to another …\nGet the squared distance from this position to another …\nReturn a new instance of this position with the y …\nReturn a new instance of this position with the y …\nReturn a new instance of this position with the y …\nReturn a new instance of this position with the y …\nReturn a new instance of this position with the x …\nReturn a new instance of this position with the x …\nReturn a new instance of this position with the x …\nReturn a new instance of this position with the x …\nDisplay a position as <code>x y z</code>.\nDisplay a block position as <code>x y z</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the distance of this vector to the origin by doing …\nGet the distance of this vector from the origin by doing …\nGet the distance of this vector to the origin by doing …\nGet the distance of this vector to the origin by doing …\nGet the distance of this vector to the origin by doing …\nGet the distance of this vector to the origin by doing …\nReturn a new instance of this position with the z …\nReturn a new instance of this position with the z …\nReturn a new instance of this position with the z …\nReturn a new instance of this position with the z …\nReturn a new instance of this position with the z …\nReturn a new instance of this position with the z …\nReturn a new instance of this position with the z …\nReturn a new instance of this position with the z …\nFind the difference between two positions.\nFind the difference between two positions.\nFind the difference between two positions.\nFind the difference between two positions.\nConvert the block position into a Vec3 without centering …\nReturn a new instance of this position with the y …\nReturn a new instance of this position with the y …\nReturn a new instance of this position with the y …\nReturn a new instance of this position with the y …\nReturn a new instance of this position with the x …\nReturn a new instance of this position with the x …\nReturn a new instance of this position with the x …\nReturn a new instance of this position with the x …\nThe effects of a biome.\nThe music of the biome.\nBiome particles.\nThe precipitation of a biome.\nData about a chat message.\nData about a kind of chat message\nThe style of a chat message.\nA complex value with a type, minimum, and maximum. Vanilla …\nDimension attributes.\nThe light level at which monsters can spawn.\nThe min and max light levels at which monsters can spawn.\nThe base of the registry.\nA collection of values for a certain type of registry data.\nA simple minimum value.\nBiome attributes.\nGet the dimension type registry, or <code>None</code> if it doesn’t …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA Bevy schedule that runs every Minecraft game tick, i.e. …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")