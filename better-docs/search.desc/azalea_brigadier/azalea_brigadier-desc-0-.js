searchState.loadedDescShard("azalea_brigadier", 0, "Azalea Brigadier\nMatch the rest of the input.\nSame as single word unless the argument is wrapped in …\nMatch up until the next space.\nReturns the argument unchanged.\nMatch the rest of the input.\nCalls <code>U::from(self)</code>.\nSame as single word unless the argument is wrapped in …\nMatch up until the next space.\nA node that hasn’t yet been built.\nManually build this node into a <code>CommandNode</code>. You probably …\nSet the command to be executed when this node is reached. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSet the requirement for this node to be considered. If …\nContinue building this node with a child node.\nAdd an already built child node to this node.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nShortcut for creating a new literal builder node.\nAn argument node type. The <code>T</code> type parameter is the type of …\nShortcut for creating a new argument builder node.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe root of the command tree. You need to make this to …\nParse and execute the command using the given input and …\nExecutes a given pre-parsed command.\nReturns the argument unchanged.\nGets the possible executable commands from a specified …\nCalls <code>U::from(self)</code>.\nAdd a new node to the root.\nA built <code>CommandContextBuilder</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA suggestion given to the user for what they might want to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn ArgumentBuilder that has been built.\nNo value.\nSome value of type <code>T</code>.\nGets the argument, or panics. You should use match if you…\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nGets the literal, or panics. You should use match if you’…")